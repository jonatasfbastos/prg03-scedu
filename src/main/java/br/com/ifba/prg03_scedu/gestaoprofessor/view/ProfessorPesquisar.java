/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.ifba.prg03_scedu.gestaoprofessor.view;

import br.com.ifba.prg03_scedu.gestaoprofessor.controller.ProfessorIController;
import br.com.ifba.prg03_scedu.gestaoprofessor.entity.Professor;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.springframework.stereotype.Component;

/**
 *
 * @author hmart
 */



@Component
public class ProfessorPesquisar extends javax.swing.JFrame {

    private final ProfessorIController professorControler;
    
    public ProfessorPesquisar(ProfessorIController professorController) {
        initComponents();
        this.professorControler = professorController;
    }
    
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnVoltar = new javax.swing.JButton();
        btnId = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnNome = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnVoltar.setText("VOLTAR");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        btnId.setText("Pesquisar pelo Código");
        btnId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIdActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "NOME", "CPF", "MATERIA", "NASCIMENTO", "FORMADO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.String.class, java.lang.Byte.class, java.lang.String.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        btnNome.setText("Pesquisar pelo Nome");
        btnNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 676, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(btnId, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNome, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(155, 155, 155))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNome, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnId, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(185, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIdActionPerformed
        pesquisarId();
    }//GEN-LAST:event_btnIdActionPerformed

    private void btnNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNomeActionPerformed
        pesquisarNome();
    }//GEN-LAST:event_btnNomeActionPerformed

    /**
     * @param args the command line arguments
     */
    
    
    private void pesquisarId(){
    
        String idstr  = JOptionPane.showInputDialog("Digite o Código do Professor");
        long id;
        
        
         if (idstr == null || idstr.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, insira o Código do professor.");
            return;
        }
         
         id = Integer.parseInt(idstr);
         Professor professor = professorControler.findById(id);
         
         if (professor == null) {
            JOptionPane.showMessageDialog(this, "Professor não encontrado.");
        } else {
             DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
             
            //Apagar todos os Dados
            model.setRowCount(0);
        
          
            model.addRow(new Object[]{
               professor.getId(),
               professor.getNome(),
               professor.getCpf(),
               professor.getMateria(),
               professor.getNascimento(),
               professor.getFormado()
            });
                 
        }
         
        try{
            id = Long.parseLong(idstr);
        } catch(Exception e){
           JOptionPane.showConfirmDialog(null ,"ID inválido.");
           return; 
        }
        
        System.out.println("Salvo o ID " + idstr);
        
    }
    public static void main(String args[]) {
        
    }
    
    
    
    private void pesquisarNome(){     
        
        String nome  = JOptionPane.showInputDialog("Digite o Código do Professor");
       
        
        
         if (nome == null || nome.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, insira o Nome do professor.");
            return;
        }       
         
         /*Professor professor = (Professor) professorControler.findbyname(nome);
         
         if (professor == null) {
            JOptionPane.showMessageDialog(this, "Professor não encontrado.");
        } else {
             DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
             
            //Apagar todos os Dados
            model.setRowCount(0);
        
          
            model.addRow(new Object[]{
               professor.getId(),
               professor.getNome(),
               professor.getCpf(),
               professor.getMateria(),
               professor.getNascimento(),
               professor.getFormado()
            });
                 
        }*/
         
        
        
        System.out.println("Salvo o ID " + nome);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnId;
    private javax.swing.JButton btnNome;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
